// Code generated by protoc-gen-go. DO NOT EDIT.
// source: desc_test_complex.proto

package testprotos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EnumWithReservations int32

const (
	EnumWithReservations_X EnumWithReservations = 2
	EnumWithReservations_Y EnumWithReservations = 3
	EnumWithReservations_Z EnumWithReservations = 4
)

var EnumWithReservations_name = map[int32]string{
	2: "X",
	3: "Y",
	4: "Z",
}

var EnumWithReservations_value = map[string]int32{
	"X": 2,
	"Y": 3,
	"Z": 4,
}

func (x EnumWithReservations) Enum() *EnumWithReservations {
	p := new(EnumWithReservations)
	*p = x
	return p
}

func (x EnumWithReservations) String() string {
	return proto.EnumName(EnumWithReservations_name, int32(x))
}

func (x *EnumWithReservations) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnumWithReservations_value, data, "EnumWithReservations")
	if err != nil {
		return err
	}
	*x = EnumWithReservations(value)
	return nil
}

func (EnumWithReservations) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{0}
}

type Test_Nested__NestedNested_EEE int32

const (
	Test_Nested__NestedNested_OK Test_Nested__NestedNested_EEE = 0
	Test_Nested__NestedNested_V1 Test_Nested__NestedNested_EEE = 1
	Test_Nested__NestedNested_V2 Test_Nested__NestedNested_EEE = 2
	Test_Nested__NestedNested_V3 Test_Nested__NestedNested_EEE = 3
	Test_Nested__NestedNested_V4 Test_Nested__NestedNested_EEE = 4
	Test_Nested__NestedNested_V5 Test_Nested__NestedNested_EEE = 5
	Test_Nested__NestedNested_V6 Test_Nested__NestedNested_EEE = 6
)

var Test_Nested__NestedNested_EEE_name = map[int32]string{
	0: "OK",
	1: "V1",
	2: "V2",
	3: "V3",
	4: "V4",
	5: "V5",
	6: "V6",
}

var Test_Nested__NestedNested_EEE_value = map[string]int32{
	"OK": 0,
	"V1": 1,
	"V2": 2,
	"V3": 3,
	"V4": 4,
	"V5": 5,
	"V6": 6,
}

func (x Test_Nested__NestedNested_EEE) Enum() *Test_Nested__NestedNested_EEE {
	p := new(Test_Nested__NestedNested_EEE)
	*p = x
	return p
}

func (x Test_Nested__NestedNested_EEE) String() string {
	return proto.EnumName(Test_Nested__NestedNested_EEE_name, int32(x))
}

func (x *Test_Nested__NestedNested_EEE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Test_Nested__NestedNested_EEE_value, data, "Test_Nested__NestedNested_EEE")
	if err != nil {
		return err
	}
	*x = Test_Nested__NestedNested_EEE(value)
	return nil
}

func (Test_Nested__NestedNested_EEE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{1, 1, 0, 0}
}

type Validator_Action int32

const (
	Validator_LOGIN Validator_Action = 0
	Validator_READ  Validator_Action = 1
	Validator_WRITE Validator_Action = 2
)

var Validator_Action_name = map[int32]string{
	0: "LOGIN",
	1: "READ",
	2: "WRITE",
}

var Validator_Action_value = map[string]int32{
	"LOGIN": 0,
	"READ":  1,
	"WRITE": 2,
}

func (x Validator_Action) Enum() *Validator_Action {
	p := new(Validator_Action)
	*p = x
	return p
}

func (x Validator_Action) String() string {
	return proto.EnumName(Validator_Action_name, int32(x))
}

func (x *Validator_Action) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Validator_Action_value, data, "Validator_Action")
	if err != nil {
		return err
	}
	*x = Validator_Action(value)
	return nil
}

func (Validator_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{4, 0}
}

type Simple struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id                   *uint64  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Simple) Reset()         { *m = Simple{} }
func (m *Simple) String() string { return proto.CompactTextString(m) }
func (*Simple) ProtoMessage()    {}
func (*Simple) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{0}
}

func (m *Simple) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Simple.Unmarshal(m, b)
}
func (m *Simple) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Simple.Marshal(b, m, deterministic)
}
func (m *Simple) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Simple.Merge(m, src)
}
func (m *Simple) XXX_Size() int {
	return xxx_messageInfo_Simple.Size(m)
}
func (m *Simple) XXX_DiscardUnknown() {
	xxx_messageInfo_Simple.DiscardUnknown(m)
}

var xxx_messageInfo_Simple proto.InternalMessageInfo

func (m *Simple) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Simple) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type Test struct {
	Foo                          *string          `protobuf:"bytes,1,opt,name=foo,json=|foo|" json:"foo,omitempty"`
	Array                        []int32          `protobuf:"varint,2,rep,name=array" json:"array,omitempty"`
	S                            *Simple          `protobuf:"bytes,3,opt,name=s" json:"s,omitempty"`
	R                            []*Simple        `protobuf:"bytes,4,rep,name=r" json:"r,omitempty"`
	M                            map[string]int32 `protobuf:"bytes,5,rep,name=m" json:"m,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	B                            []byte           `protobuf:"bytes,6,opt,name=b,def=\\000\\001\\002\\003\\004\\005\\006\\007fubar!" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}         `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *Test) Reset()         { *m = Test{} }
func (m *Test) String() string { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()    {}
func (*Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{1}
}

var extRange_Test = []proto.ExtensionRange{
	{Start: 100, End: 200},
	{Start: 300, End: 350},
	{Start: 500, End: 550},
}

func (*Test) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_Test
}

func (m *Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test.Unmarshal(m, b)
}
func (m *Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test.Marshal(b, m, deterministic)
}
func (m *Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test.Merge(m, src)
}
func (m *Test) XXX_Size() int {
	return xxx_messageInfo_Test.Size(m)
}
func (m *Test) XXX_DiscardUnknown() {
	xxx_messageInfo_Test.DiscardUnknown(m)
}

var xxx_messageInfo_Test proto.InternalMessageInfo

var Default_Test_B []byte = []byte("\x00\x01\x02\x03\x04\x05\x06\afubar!")

func (m *Test) GetFoo() string {
	if m != nil && m.Foo != nil {
		return *m.Foo
	}
	return ""
}

func (m *Test) GetArray() []int32 {
	if m != nil {
		return m.Array
	}
	return nil
}

func (m *Test) GetS() *Simple {
	if m != nil {
		return m.S
	}
	return nil
}

func (m *Test) GetR() []*Simple {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *Test) GetM() map[string]int32 {
	if m != nil {
		return m.M
	}
	return nil
}

func (m *Test) GetB() []byte {
	if m != nil && m.B != nil {
		return m.B
	}
	return append([]byte(nil), Default_Test_B...)
}

type Test_Nested struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Test_Nested) Reset()         { *m = Test_Nested{} }
func (m *Test_Nested) String() string { return proto.CompactTextString(m) }
func (*Test_Nested) ProtoMessage()    {}
func (*Test_Nested) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{1, 1}
}

func (m *Test_Nested) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test_Nested.Unmarshal(m, b)
}
func (m *Test_Nested) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test_Nested.Marshal(b, m, deterministic)
}
func (m *Test_Nested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test_Nested.Merge(m, src)
}
func (m *Test_Nested) XXX_Size() int {
	return xxx_messageInfo_Test_Nested.Size(m)
}
func (m *Test_Nested) XXX_DiscardUnknown() {
	xxx_messageInfo_Test_Nested.DiscardUnknown(m)
}

var xxx_messageInfo_Test_Nested proto.InternalMessageInfo

var E_Test_Nested_Fooblez = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*int32)(nil),
	Field:         20003,
	Name:          "foo.bar.Test.Nested.fooblez",
	Tag:           "varint,20003,opt,name=fooblez",
	Filename:      "desc_test_complex.proto",
}

type Test_Nested__NestedNested struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Test_Nested__NestedNested) Reset()         { *m = Test_Nested__NestedNested{} }
func (m *Test_Nested__NestedNested) String() string { return proto.CompactTextString(m) }
func (*Test_Nested__NestedNested) ProtoMessage()    {}
func (*Test_Nested__NestedNested) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{1, 1, 0}
}

func (m *Test_Nested__NestedNested) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test_Nested__NestedNested.Unmarshal(m, b)
}
func (m *Test_Nested__NestedNested) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test_Nested__NestedNested.Marshal(b, m, deterministic)
}
func (m *Test_Nested__NestedNested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test_Nested__NestedNested.Merge(m, src)
}
func (m *Test_Nested__NestedNested) XXX_Size() int {
	return xxx_messageInfo_Test_Nested__NestedNested.Size(m)
}
func (m *Test_Nested__NestedNested) XXX_DiscardUnknown() {
	xxx_messageInfo_Test_Nested__NestedNested.DiscardUnknown(m)
}

var xxx_messageInfo_Test_Nested__NestedNested proto.InternalMessageInfo

var E_Test_Nested_XNestedNested_XGarblez = &proto.ExtensionDesc{
	ExtendedType:  (*Test)(nil),
	ExtensionType: (*string)(nil),
	Field:         100,
	Name:          "foo.bar.Test.Nested._NestedNested._garblez",
	Tag:           "bytes,100,opt,name=_garblez",
	Filename:      "desc_test_complex.proto",
}

type Test_Nested__NestedNested_NestedNestedNested struct {
	Test                 *Test    `protobuf:"bytes,1,opt,name=Test" json:"Test,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Test_Nested__NestedNested_NestedNestedNested) Reset() {
	*m = Test_Nested__NestedNested_NestedNestedNested{}
}
func (m *Test_Nested__NestedNested_NestedNestedNested) String() string {
	return proto.CompactTextString(m)
}
func (*Test_Nested__NestedNested_NestedNestedNested) ProtoMessage() {}
func (*Test_Nested__NestedNested_NestedNestedNested) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{1, 1, 0, 0}
}

func (m *Test_Nested__NestedNested_NestedNestedNested) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test_Nested__NestedNested_NestedNestedNested.Unmarshal(m, b)
}
func (m *Test_Nested__NestedNested_NestedNestedNested) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test_Nested__NestedNested_NestedNestedNested.Marshal(b, m, deterministic)
}
func (m *Test_Nested__NestedNested_NestedNestedNested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test_Nested__NestedNested_NestedNestedNested.Merge(m, src)
}
func (m *Test_Nested__NestedNested_NestedNestedNested) XXX_Size() int {
	return xxx_messageInfo_Test_Nested__NestedNested_NestedNestedNested.Size(m)
}
func (m *Test_Nested__NestedNested_NestedNestedNested) XXX_DiscardUnknown() {
	xxx_messageInfo_Test_Nested__NestedNested_NestedNestedNested.DiscardUnknown(m)
}

var xxx_messageInfo_Test_Nested__NestedNested_NestedNestedNested proto.InternalMessageInfo

func (m *Test_Nested__NestedNested_NestedNestedNested) GetTest() *Test {
	if m != nil {
		return m.Test
	}
	return nil
}

type MessageWithReservations struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageWithReservations) Reset()         { *m = MessageWithReservations{} }
func (m *MessageWithReservations) String() string { return proto.CompactTextString(m) }
func (*MessageWithReservations) ProtoMessage()    {}
func (*MessageWithReservations) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{2}
}

func (m *MessageWithReservations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageWithReservations.Unmarshal(m, b)
}
func (m *MessageWithReservations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageWithReservations.Marshal(b, m, deterministic)
}
func (m *MessageWithReservations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageWithReservations.Merge(m, src)
}
func (m *MessageWithReservations) XXX_Size() int {
	return xxx_messageInfo_MessageWithReservations.Size(m)
}
func (m *MessageWithReservations) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageWithReservations.DiscardUnknown(m)
}

var xxx_messageInfo_MessageWithReservations proto.InternalMessageInfo

type Another struct {
	Test                 *Test                          `protobuf:"bytes,1,opt,name=test" json:"test,omitempty"`
	Fff                  *Test_Nested__NestedNested_EEE `protobuf:"varint,2,opt,name=fff,enum=foo.bar.Test_Nested__NestedNested_EEE,def=1" json:"fff,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Another) Reset()         { *m = Another{} }
func (m *Another) String() string { return proto.CompactTextString(m) }
func (*Another) ProtoMessage()    {}
func (*Another) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{3}
}

func (m *Another) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Another.Unmarshal(m, b)
}
func (m *Another) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Another.Marshal(b, m, deterministic)
}
func (m *Another) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Another.Merge(m, src)
}
func (m *Another) XXX_Size() int {
	return xxx_messageInfo_Another.Size(m)
}
func (m *Another) XXX_DiscardUnknown() {
	xxx_messageInfo_Another.DiscardUnknown(m)
}

var xxx_messageInfo_Another proto.InternalMessageInfo

const Default_Another_Fff Test_Nested__NestedNested_EEE = Test_Nested__NestedNested_V1

func (m *Another) GetTest() *Test {
	if m != nil {
		return m.Test
	}
	return nil
}

func (m *Another) GetFff() Test_Nested__NestedNested_EEE {
	if m != nil && m.Fff != nil {
		return *m.Fff
	}
	return Default_Another_Fff
}

type Validator struct {
	Authenticated        *bool                   `protobuf:"varint,1,opt,name=authenticated" json:"authenticated,omitempty"`
	Permission           []*Validator_Permission `protobuf:"bytes,2,rep,name=permission" json:"permission,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Validator) Reset()         { *m = Validator{} }
func (m *Validator) String() string { return proto.CompactTextString(m) }
func (*Validator) ProtoMessage()    {}
func (*Validator) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{4}
}

func (m *Validator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Validator.Unmarshal(m, b)
}
func (m *Validator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Validator.Marshal(b, m, deterministic)
}
func (m *Validator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Validator.Merge(m, src)
}
func (m *Validator) XXX_Size() int {
	return xxx_messageInfo_Validator.Size(m)
}
func (m *Validator) XXX_DiscardUnknown() {
	xxx_messageInfo_Validator.DiscardUnknown(m)
}

var xxx_messageInfo_Validator proto.InternalMessageInfo

func (m *Validator) GetAuthenticated() bool {
	if m != nil && m.Authenticated != nil {
		return *m.Authenticated
	}
	return false
}

func (m *Validator) GetPermission() []*Validator_Permission {
	if m != nil {
		return m.Permission
	}
	return nil
}

type Validator_Permission struct {
	Action               *Validator_Action `protobuf:"varint,1,opt,name=action,enum=foo.bar.Validator_Action" json:"action,omitempty"`
	Entity               *string           `protobuf:"bytes,2,opt,name=entity" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Validator_Permission) Reset()         { *m = Validator_Permission{} }
func (m *Validator_Permission) String() string { return proto.CompactTextString(m) }
func (*Validator_Permission) ProtoMessage()    {}
func (*Validator_Permission) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{4, 0}
}

func (m *Validator_Permission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Validator_Permission.Unmarshal(m, b)
}
func (m *Validator_Permission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Validator_Permission.Marshal(b, m, deterministic)
}
func (m *Validator_Permission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Validator_Permission.Merge(m, src)
}
func (m *Validator_Permission) XXX_Size() int {
	return xxx_messageInfo_Validator_Permission.Size(m)
}
func (m *Validator_Permission) XXX_DiscardUnknown() {
	xxx_messageInfo_Validator_Permission.DiscardUnknown(m)
}

var xxx_messageInfo_Validator_Permission proto.InternalMessageInfo

func (m *Validator_Permission) GetAction() Validator_Action {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return Validator_LOGIN
}

func (m *Validator_Permission) GetEntity() string {
	if m != nil && m.Entity != nil {
		return *m.Entity
	}
	return ""
}

type Rule struct {
	// Types that are valid to be assigned to Rule:
	//	*Rule_String_
	//	*Rule_Repeated
	//	*Rule_Int
	//	*Rule_Floatrule
	Rule                 isRule_Rule `protobuf_oneof:"rule"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Rule) Reset()         { *m = Rule{} }
func (m *Rule) String() string { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()    {}
func (*Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{5}
}

func (m *Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule.Unmarshal(m, b)
}
func (m *Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule.Marshal(b, m, deterministic)
}
func (m *Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule.Merge(m, src)
}
func (m *Rule) XXX_Size() int {
	return xxx_messageInfo_Rule.Size(m)
}
func (m *Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule proto.InternalMessageInfo

type isRule_Rule interface {
	isRule_Rule()
}

type Rule_String_ struct {
	String_ *Rule_StringRule `protobuf:"bytes,1,opt,name=string,oneof"`
}

type Rule_Repeated struct {
	Repeated *Rule_RepeatedRule `protobuf:"bytes,2,opt,name=repeated,oneof"`
}

type Rule_Int struct {
	Int *Rule_IntRule `protobuf:"bytes,3,opt,name=int,oneof"`
}

type Rule_Floatrule struct {
	Floatrule *Rule_FloatRule `protobuf:"group,4,opt,name=FloatRule,json=floatrule,oneof"`
}

func (*Rule_String_) isRule_Rule() {}

func (*Rule_Repeated) isRule_Rule() {}

func (*Rule_Int) isRule_Rule() {}

func (*Rule_Floatrule) isRule_Rule() {}

func (m *Rule) GetRule() isRule_Rule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *Rule) GetString_() *Rule_StringRule {
	if x, ok := m.GetRule().(*Rule_String_); ok {
		return x.String_
	}
	return nil
}

func (m *Rule) GetRepeated() *Rule_RepeatedRule {
	if x, ok := m.GetRule().(*Rule_Repeated); ok {
		return x.Repeated
	}
	return nil
}

func (m *Rule) GetInt() *Rule_IntRule {
	if x, ok := m.GetRule().(*Rule_Int); ok {
		return x.Int
	}
	return nil
}

func (m *Rule) GetFloatrule() *Rule_FloatRule {
	if x, ok := m.GetRule().(*Rule_Floatrule); ok {
		return x.Floatrule
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Rule) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Rule_String_)(nil),
		(*Rule_Repeated)(nil),
		(*Rule_Int)(nil),
		(*Rule_Floatrule)(nil),
	}
}

type Rule_StringRule struct {
	Pattern              *string  `protobuf:"bytes,1,opt,name=pattern" json:"pattern,omitempty"`
	AllowEmpty           *bool    `protobuf:"varint,2,opt,name=allow_empty,json=allowEmpty" json:"allow_empty,omitempty"`
	MinLen               *int32   `protobuf:"varint,3,opt,name=min_len,json=minLen" json:"min_len,omitempty"`
	MaxLen               *int32   `protobuf:"varint,4,opt,name=max_len,json=maxLen" json:"max_len,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rule_StringRule) Reset()         { *m = Rule_StringRule{} }
func (m *Rule_StringRule) String() string { return proto.CompactTextString(m) }
func (*Rule_StringRule) ProtoMessage()    {}
func (*Rule_StringRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{5, 0}
}

func (m *Rule_StringRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule_StringRule.Unmarshal(m, b)
}
func (m *Rule_StringRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule_StringRule.Marshal(b, m, deterministic)
}
func (m *Rule_StringRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule_StringRule.Merge(m, src)
}
func (m *Rule_StringRule) XXX_Size() int {
	return xxx_messageInfo_Rule_StringRule.Size(m)
}
func (m *Rule_StringRule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule_StringRule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule_StringRule proto.InternalMessageInfo

func (m *Rule_StringRule) GetPattern() string {
	if m != nil && m.Pattern != nil {
		return *m.Pattern
	}
	return ""
}

func (m *Rule_StringRule) GetAllowEmpty() bool {
	if m != nil && m.AllowEmpty != nil {
		return *m.AllowEmpty
	}
	return false
}

func (m *Rule_StringRule) GetMinLen() int32 {
	if m != nil && m.MinLen != nil {
		return *m.MinLen
	}
	return 0
}

func (m *Rule_StringRule) GetMaxLen() int32 {
	if m != nil && m.MaxLen != nil {
		return *m.MaxLen
	}
	return 0
}

type Rule_IntRule struct {
	MinVal               *int64   `protobuf:"varint,1,opt,name=min_val,json=minVal" json:"min_val,omitempty"`
	MaxVal               *uint64  `protobuf:"varint,2,opt,name=max_val,json=maxVal" json:"max_val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rule_IntRule) Reset()         { *m = Rule_IntRule{} }
func (m *Rule_IntRule) String() string { return proto.CompactTextString(m) }
func (*Rule_IntRule) ProtoMessage()    {}
func (*Rule_IntRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{5, 1}
}

func (m *Rule_IntRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule_IntRule.Unmarshal(m, b)
}
func (m *Rule_IntRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule_IntRule.Marshal(b, m, deterministic)
}
func (m *Rule_IntRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule_IntRule.Merge(m, src)
}
func (m *Rule_IntRule) XXX_Size() int {
	return xxx_messageInfo_Rule_IntRule.Size(m)
}
func (m *Rule_IntRule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule_IntRule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule_IntRule proto.InternalMessageInfo

func (m *Rule_IntRule) GetMinVal() int64 {
	if m != nil && m.MinVal != nil {
		return *m.MinVal
	}
	return 0
}

func (m *Rule_IntRule) GetMaxVal() uint64 {
	if m != nil && m.MaxVal != nil {
		return *m.MaxVal
	}
	return 0
}

type Rule_RepeatedRule struct {
	AllowEmpty           *bool    `protobuf:"varint,1,opt,name=allow_empty,json=allowEmpty" json:"allow_empty,omitempty"`
	MinItems             *int32   `protobuf:"varint,2,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	MaxItems             *int32   `protobuf:"varint,3,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	Items                *Rule    `protobuf:"bytes,4,opt,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rule_RepeatedRule) Reset()         { *m = Rule_RepeatedRule{} }
func (m *Rule_RepeatedRule) String() string { return proto.CompactTextString(m) }
func (*Rule_RepeatedRule) ProtoMessage()    {}
func (*Rule_RepeatedRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{5, 2}
}

func (m *Rule_RepeatedRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule_RepeatedRule.Unmarshal(m, b)
}
func (m *Rule_RepeatedRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule_RepeatedRule.Marshal(b, m, deterministic)
}
func (m *Rule_RepeatedRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule_RepeatedRule.Merge(m, src)
}
func (m *Rule_RepeatedRule) XXX_Size() int {
	return xxx_messageInfo_Rule_RepeatedRule.Size(m)
}
func (m *Rule_RepeatedRule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule_RepeatedRule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule_RepeatedRule proto.InternalMessageInfo

func (m *Rule_RepeatedRule) GetAllowEmpty() bool {
	if m != nil && m.AllowEmpty != nil {
		return *m.AllowEmpty
	}
	return false
}

func (m *Rule_RepeatedRule) GetMinItems() int32 {
	if m != nil && m.MinItems != nil {
		return *m.MinItems
	}
	return 0
}

func (m *Rule_RepeatedRule) GetMaxItems() int32 {
	if m != nil && m.MaxItems != nil {
		return *m.MaxItems
	}
	return 0
}

func (m *Rule_RepeatedRule) GetItems() *Rule {
	if m != nil {
		return m.Items
	}
	return nil
}

type Rule_FloatRule struct {
	MinVal               *float64 `protobuf:"fixed64,1,opt,name=min_val,json=minVal" json:"min_val,omitempty"`
	MaxVal               *float64 `protobuf:"fixed64,2,opt,name=max_val,json=maxVal" json:"max_val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rule_FloatRule) Reset()         { *m = Rule_FloatRule{} }
func (m *Rule_FloatRule) String() string { return proto.CompactTextString(m) }
func (*Rule_FloatRule) ProtoMessage()    {}
func (*Rule_FloatRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{5, 3}
}

func (m *Rule_FloatRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule_FloatRule.Unmarshal(m, b)
}
func (m *Rule_FloatRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule_FloatRule.Marshal(b, m, deterministic)
}
func (m *Rule_FloatRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule_FloatRule.Merge(m, src)
}
func (m *Rule_FloatRule) XXX_Size() int {
	return xxx_messageInfo_Rule_FloatRule.Size(m)
}
func (m *Rule_FloatRule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule_FloatRule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule_FloatRule proto.InternalMessageInfo

func (m *Rule_FloatRule) GetMinVal() float64 {
	if m != nil && m.MinVal != nil {
		return *m.MinVal
	}
	return 0
}

func (m *Rule_FloatRule) GetMaxVal() float64 {
	if m != nil && m.MaxVal != nil {
		return *m.MaxVal
	}
	return 0
}

type IsAuthorizedReq struct {
	Subjects             []string `protobuf:"bytes,1,rep,name=subjects" json:"subjects,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsAuthorizedReq) Reset()         { *m = IsAuthorizedReq{} }
func (m *IsAuthorizedReq) String() string { return proto.CompactTextString(m) }
func (*IsAuthorizedReq) ProtoMessage()    {}
func (*IsAuthorizedReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{6}
}

func (m *IsAuthorizedReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsAuthorizedReq.Unmarshal(m, b)
}
func (m *IsAuthorizedReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsAuthorizedReq.Marshal(b, m, deterministic)
}
func (m *IsAuthorizedReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsAuthorizedReq.Merge(m, src)
}
func (m *IsAuthorizedReq) XXX_Size() int {
	return xxx_messageInfo_IsAuthorizedReq.Size(m)
}
func (m *IsAuthorizedReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IsAuthorizedReq.DiscardUnknown(m)
}

var xxx_messageInfo_IsAuthorizedReq proto.InternalMessageInfo

func (m *IsAuthorizedReq) GetSubjects() []string {
	if m != nil {
		return m.Subjects
	}
	return nil
}

type KeywordCollisions struct {
	Syntax               *bool    `protobuf:"varint,1,opt,name=syntax" json:"syntax,omitempty"`
	Import               *bool    `protobuf:"varint,2,opt,name=import" json:"import,omitempty"`
	Public               *bool    `protobuf:"varint,3,opt,name=public" json:"public,omitempty"`
	Weak                 *bool    `protobuf:"varint,4,opt,name=weak" json:"weak,omitempty"`
	Package              *bool    `protobuf:"varint,5,opt,name=package" json:"package,omitempty"`
	String_              *string  `protobuf:"bytes,6,opt,name=string" json:"string,omitempty"`
	Bytes                []byte   `protobuf:"bytes,7,opt,name=bytes" json:"bytes,omitempty"`
	Int32                *int32   `protobuf:"varint,8,opt,name=int32" json:"int32,omitempty"`
	Int64                *int64   `protobuf:"varint,9,opt,name=int64" json:"int64,omitempty"`
	Uint32               *uint32  `protobuf:"varint,10,opt,name=uint32" json:"uint32,omitempty"`
	Uint64               *uint64  `protobuf:"varint,11,opt,name=uint64" json:"uint64,omitempty"`
	Sint32               *int32   `protobuf:"zigzag32,12,opt,name=sint32" json:"sint32,omitempty"`
	Sint64               *int64   `protobuf:"zigzag64,13,opt,name=sint64" json:"sint64,omitempty"`
	Fixed32              *uint32  `protobuf:"fixed32,14,opt,name=fixed32" json:"fixed32,omitempty"`
	Fixed64              *uint64  `protobuf:"fixed64,15,opt,name=fixed64" json:"fixed64,omitempty"`
	Sfixed32             *int32   `protobuf:"fixed32,16,opt,name=sfixed32" json:"sfixed32,omitempty"`
	Sfixed64             *int64   `protobuf:"fixed64,17,opt,name=sfixed64" json:"sfixed64,omitempty"`
	Bool                 *bool    `protobuf:"varint,18,opt,name=bool" json:"bool,omitempty"`
	Float                *float32 `protobuf:"fixed32,19,opt,name=float" json:"float,omitempty"`
	Double               *float64 `protobuf:"fixed64,20,opt,name=double" json:"double,omitempty"`
	Optional             *bool    `protobuf:"varint,21,opt,name=optional" json:"optional,omitempty"`
	Repeated             *bool    `protobuf:"varint,22,opt,name=repeated" json:"repeated,omitempty"`
	Required             *bool    `protobuf:"varint,23,opt,name=required" json:"required,omitempty"`
	Message              *bool    `protobuf:"varint,24,opt,name=message" json:"message,omitempty"`
	Enum                 *bool    `protobuf:"varint,25,opt,name=enum" json:"enum,omitempty"`
	Service              *bool    `protobuf:"varint,26,opt,name=service" json:"service,omitempty"`
	Rpc                  *bool    `protobuf:"varint,27,opt,name=rpc" json:"rpc,omitempty"`
	Option               *bool    `protobuf:"varint,28,opt,name=option" json:"option,omitempty"`
	Extend               *bool    `protobuf:"varint,29,opt,name=extend" json:"extend,omitempty"`
	Extensions           *bool    `protobuf:"varint,30,opt,name=extensions" json:"extensions,omitempty"`
	Reserved             *bool    `protobuf:"varint,31,opt,name=reserved" json:"reserved,omitempty"`
	To                   *bool    `protobuf:"varint,32,opt,name=to" json:"to,omitempty"`
	True                 *int32   `protobuf:"varint,33,opt,name=true" json:"true,omitempty"`
	False                *int32   `protobuf:"varint,34,opt,name=false" json:"false,omitempty"`
	Default              *int32   `protobuf:"varint,35,opt,name=default" json:"default,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeywordCollisions) Reset()         { *m = KeywordCollisions{} }
func (m *KeywordCollisions) String() string { return proto.CompactTextString(m) }
func (*KeywordCollisions) ProtoMessage()    {}
func (*KeywordCollisions) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{7}
}

func (m *KeywordCollisions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeywordCollisions.Unmarshal(m, b)
}
func (m *KeywordCollisions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeywordCollisions.Marshal(b, m, deterministic)
}
func (m *KeywordCollisions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeywordCollisions.Merge(m, src)
}
func (m *KeywordCollisions) XXX_Size() int {
	return xxx_messageInfo_KeywordCollisions.Size(m)
}
func (m *KeywordCollisions) XXX_DiscardUnknown() {
	xxx_messageInfo_KeywordCollisions.DiscardUnknown(m)
}

var xxx_messageInfo_KeywordCollisions proto.InternalMessageInfo

func (m *KeywordCollisions) GetSyntax() bool {
	if m != nil && m.Syntax != nil {
		return *m.Syntax
	}
	return false
}

func (m *KeywordCollisions) GetImport() bool {
	if m != nil && m.Import != nil {
		return *m.Import
	}
	return false
}

func (m *KeywordCollisions) GetPublic() bool {
	if m != nil && m.Public != nil {
		return *m.Public
	}
	return false
}

func (m *KeywordCollisions) GetWeak() bool {
	if m != nil && m.Weak != nil {
		return *m.Weak
	}
	return false
}

func (m *KeywordCollisions) GetPackage() bool {
	if m != nil && m.Package != nil {
		return *m.Package
	}
	return false
}

func (m *KeywordCollisions) GetString_() string {
	if m != nil && m.String_ != nil {
		return *m.String_
	}
	return ""
}

func (m *KeywordCollisions) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

func (m *KeywordCollisions) GetInt32() int32 {
	if m != nil && m.Int32 != nil {
		return *m.Int32
	}
	return 0
}

func (m *KeywordCollisions) GetInt64() int64 {
	if m != nil && m.Int64 != nil {
		return *m.Int64
	}
	return 0
}

func (m *KeywordCollisions) GetUint32() uint32 {
	if m != nil && m.Uint32 != nil {
		return *m.Uint32
	}
	return 0
}

func (m *KeywordCollisions) GetUint64() uint64 {
	if m != nil && m.Uint64 != nil {
		return *m.Uint64
	}
	return 0
}

func (m *KeywordCollisions) GetSint32() int32 {
	if m != nil && m.Sint32 != nil {
		return *m.Sint32
	}
	return 0
}

func (m *KeywordCollisions) GetSint64() int64 {
	if m != nil && m.Sint64 != nil {
		return *m.Sint64
	}
	return 0
}

func (m *KeywordCollisions) GetFixed32() uint32 {
	if m != nil && m.Fixed32 != nil {
		return *m.Fixed32
	}
	return 0
}

func (m *KeywordCollisions) GetFixed64() uint64 {
	if m != nil && m.Fixed64 != nil {
		return *m.Fixed64
	}
	return 0
}

func (m *KeywordCollisions) GetSfixed32() int32 {
	if m != nil && m.Sfixed32 != nil {
		return *m.Sfixed32
	}
	return 0
}

func (m *KeywordCollisions) GetSfixed64() int64 {
	if m != nil && m.Sfixed64 != nil {
		return *m.Sfixed64
	}
	return 0
}

func (m *KeywordCollisions) GetBool() bool {
	if m != nil && m.Bool != nil {
		return *m.Bool
	}
	return false
}

func (m *KeywordCollisions) GetFloat() float32 {
	if m != nil && m.Float != nil {
		return *m.Float
	}
	return 0
}

func (m *KeywordCollisions) GetDouble() float64 {
	if m != nil && m.Double != nil {
		return *m.Double
	}
	return 0
}

func (m *KeywordCollisions) GetOptional() bool {
	if m != nil && m.Optional != nil {
		return *m.Optional
	}
	return false
}

func (m *KeywordCollisions) GetRepeated() bool {
	if m != nil && m.Repeated != nil {
		return *m.Repeated
	}
	return false
}

func (m *KeywordCollisions) GetRequired() bool {
	if m != nil && m.Required != nil {
		return *m.Required
	}
	return false
}

func (m *KeywordCollisions) GetMessage() bool {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return false
}

func (m *KeywordCollisions) GetEnum() bool {
	if m != nil && m.Enum != nil {
		return *m.Enum
	}
	return false
}

func (m *KeywordCollisions) GetService() bool {
	if m != nil && m.Service != nil {
		return *m.Service
	}
	return false
}

func (m *KeywordCollisions) GetRpc() bool {
	if m != nil && m.Rpc != nil {
		return *m.Rpc
	}
	return false
}

func (m *KeywordCollisions) GetOption() bool {
	if m != nil && m.Option != nil {
		return *m.Option
	}
	return false
}

func (m *KeywordCollisions) GetExtend() bool {
	if m != nil && m.Extend != nil {
		return *m.Extend
	}
	return false
}

func (m *KeywordCollisions) GetExtensions() bool {
	if m != nil && m.Extensions != nil {
		return *m.Extensions
	}
	return false
}

func (m *KeywordCollisions) GetReserved() bool {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return false
}

func (m *KeywordCollisions) GetTo() bool {
	if m != nil && m.To != nil {
		return *m.To
	}
	return false
}

func (m *KeywordCollisions) GetTrue() int32 {
	if m != nil && m.True != nil {
		return *m.True
	}
	return 0
}

func (m *KeywordCollisions) GetFalse() int32 {
	if m != nil && m.False != nil {
		return *m.False
	}
	return 0
}

func (m *KeywordCollisions) GetDefault() int32 {
	if m != nil && m.Default != nil {
		return *m.Default
	}
	return 0
}

type KeywordCollisionOptions struct {
	Id                   *uint64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeywordCollisionOptions) Reset()         { *m = KeywordCollisionOptions{} }
func (m *KeywordCollisionOptions) String() string { return proto.CompactTextString(m) }
func (*KeywordCollisionOptions) ProtoMessage()    {}
func (*KeywordCollisionOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_2643e20efc4f24c4, []int{8}
}

func (m *KeywordCollisionOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeywordCollisionOptions.Unmarshal(m, b)
}
func (m *KeywordCollisionOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeywordCollisionOptions.Marshal(b, m, deterministic)
}
func (m *KeywordCollisionOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeywordCollisionOptions.Merge(m, src)
}
func (m *KeywordCollisionOptions) XXX_Size() int {
	return xxx_messageInfo_KeywordCollisionOptions.Size(m)
}
func (m *KeywordCollisionOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_KeywordCollisionOptions.DiscardUnknown(m)
}

var xxx_messageInfo_KeywordCollisionOptions proto.InternalMessageInfo

func (m *KeywordCollisionOptions) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *KeywordCollisionOptions) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

var E_Label = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.ExtensionRangeOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         20000,
	Name:          "foo.bar.label",
	Tag:           "bytes,20000,opt,name=label",
	Filename:      "desc_test_complex.proto",
}

var E_Rept = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: ([]*Test)(nil),
	Field:         20002,
	Name:          "foo.bar.rept",
	Tag:           "bytes,20002,rep,name=rept",
	Filename:      "desc_test_complex.proto",
}

var E_Eee = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*Test_Nested__NestedNested_EEE)(nil),
	Field:         20010,
	Name:          "foo.bar.eee",
	Tag:           "varint,20010,opt,name=eee,enum=foo.bar.Test_Nested__NestedNested_EEE",
	Filename:      "desc_test_complex.proto",
}

var E_A = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*Another)(nil),
	Field:         20020,
	Name:          "foo.bar.a",
	Tag:           "bytes,20020,opt,name=a",
	Filename:      "desc_test_complex.proto",
}

var E_Validator = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*Validator)(nil),
	Field:         12345,
	Name:          "foo.bar.validator",
	Tag:           "bytes,12345,opt,name=validator",
	Filename:      "desc_test_complex.proto",
}

var E_Rules = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*Rule)(nil),
	Field:         1234,
	Name:          "foo.bar.rules",
	Tag:           "bytes,1234,opt,name=rules",
	Filename:      "desc_test_complex.proto",
}

var E_Syntax = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20001,
	Name:          "foo.bar.syntax",
	Tag:           "varint,20001,opt,name=syntax",
	Filename:      "desc_test_complex.proto",
}

var E_Import = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20002,
	Name:          "foo.bar.import",
	Tag:           "varint,20002,opt,name=import",
	Filename:      "desc_test_complex.proto",
}

var E_Public = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20003,
	Name:          "foo.bar.public",
	Tag:           "varint,20003,opt,name=public",
	Filename:      "desc_test_complex.proto",
}

var E_Weak = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20004,
	Name:          "foo.bar.weak",
	Tag:           "varint,20004,opt,name=weak",
	Filename:      "desc_test_complex.proto",
}

var E_Package = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20005,
	Name:          "foo.bar.package",
	Tag:           "varint,20005,opt,name=package",
	Filename:      "desc_test_complex.proto",
}

var E_String = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         20006,
	Name:          "foo.bar.string",
	Tag:           "bytes,20006,opt,name=string",
	Filename:      "desc_test_complex.proto",
}

var E_Bytes = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: ([]byte)(nil),
	Field:         20007,
	Name:          "foo.bar.bytes",
	Tag:           "bytes,20007,opt,name=bytes",
	Filename:      "desc_test_complex.proto",
}

var E_Int32 = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*int32)(nil),
	Field:         20008,
	Name:          "foo.bar.int32",
	Tag:           "varint,20008,opt,name=int32",
	Filename:      "desc_test_complex.proto",
}

var E_Int64 = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*int64)(nil),
	Field:         20009,
	Name:          "foo.bar.int64",
	Tag:           "varint,20009,opt,name=int64",
	Filename:      "desc_test_complex.proto",
}

var E_Uint32 = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*uint32)(nil),
	Field:         20010,
	Name:          "foo.bar.uint32",
	Tag:           "varint,20010,opt,name=uint32",
	Filename:      "desc_test_complex.proto",
}

var E_Uint64 = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*uint64)(nil),
	Field:         20011,
	Name:          "foo.bar.uint64",
	Tag:           "varint,20011,opt,name=uint64",
	Filename:      "desc_test_complex.proto",
}

var E_Sint32 = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*int32)(nil),
	Field:         20012,
	Name:          "foo.bar.sint32",
	Tag:           "zigzag32,20012,opt,name=sint32",
	Filename:      "desc_test_complex.proto",
}

var E_Sint64 = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*int64)(nil),
	Field:         20013,
	Name:          "foo.bar.sint64",
	Tag:           "zigzag64,20013,opt,name=sint64",
	Filename:      "desc_test_complex.proto",
}

var E_Fixed32 = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*uint32)(nil),
	Field:         20014,
	Name:          "foo.bar.fixed32",
	Tag:           "fixed32,20014,opt,name=fixed32",
	Filename:      "desc_test_complex.proto",
}

var E_Fixed64 = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*uint64)(nil),
	Field:         20015,
	Name:          "foo.bar.fixed64",
	Tag:           "fixed64,20015,opt,name=fixed64",
	Filename:      "desc_test_complex.proto",
}

var E_Sfixed32 = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*int32)(nil),
	Field:         20016,
	Name:          "foo.bar.sfixed32",
	Tag:           "fixed32,20016,opt,name=sfixed32",
	Filename:      "desc_test_complex.proto",
}

var E_Sfixed64 = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*int64)(nil),
	Field:         20017,
	Name:          "foo.bar.sfixed64",
	Tag:           "fixed64,20017,opt,name=sfixed64",
	Filename:      "desc_test_complex.proto",
}

var E_Bool = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20018,
	Name:          "foo.bar.bool",
	Tag:           "varint,20018,opt,name=bool",
	Filename:      "desc_test_complex.proto",
}

var E_Float = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*float32)(nil),
	Field:         20019,
	Name:          "foo.bar.float",
	Tag:           "fixed32,20019,opt,name=float",
	Filename:      "desc_test_complex.proto",
}

var E_Double = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*float64)(nil),
	Field:         20020,
	Name:          "foo.bar.double",
	Tag:           "fixed64,20020,opt,name=double",
	Filename:      "desc_test_complex.proto",
}

var E_Optional = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20021,
	Name:          "foo.bar.optional",
	Tag:           "varint,20021,opt,name=optional",
	Filename:      "desc_test_complex.proto",
}

var E_Repeated = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20022,
	Name:          "foo.bar.repeated",
	Tag:           "varint,20022,opt,name=repeated",
	Filename:      "desc_test_complex.proto",
}

var E_Required = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20023,
	Name:          "foo.bar.required",
	Tag:           "varint,20023,opt,name=required",
	Filename:      "desc_test_complex.proto",
}

var E_Message = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20024,
	Name:          "foo.bar.message",
	Tag:           "varint,20024,opt,name=message",
	Filename:      "desc_test_complex.proto",
}

var E_Enum = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20025,
	Name:          "foo.bar.enum",
	Tag:           "varint,20025,opt,name=enum",
	Filename:      "desc_test_complex.proto",
}

var E_Service = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20026,
	Name:          "foo.bar.service",
	Tag:           "varint,20026,opt,name=service",
	Filename:      "desc_test_complex.proto",
}

var E_Rpc = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20027,
	Name:          "foo.bar.rpc",
	Tag:           "varint,20027,opt,name=rpc",
	Filename:      "desc_test_complex.proto",
}

var E_Option = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20028,
	Name:          "foo.bar.option",
	Tag:           "varint,20028,opt,name=option",
	Filename:      "desc_test_complex.proto",
}

var E_Extend = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20029,
	Name:          "foo.bar.extend",
	Tag:           "varint,20029,opt,name=extend",
	Filename:      "desc_test_complex.proto",
}

var E_Extensions = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20030,
	Name:          "foo.bar.extensions",
	Tag:           "varint,20030,opt,name=extensions",
	Filename:      "desc_test_complex.proto",
}

var E_Reserved = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20031,
	Name:          "foo.bar.reserved",
	Tag:           "varint,20031,opt,name=reserved",
	Filename:      "desc_test_complex.proto",
}

var E_To = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         20032,
	Name:          "foo.bar.to",
	Tag:           "varint,20032,opt,name=to",
	Filename:      "desc_test_complex.proto",
}

var E_True = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*int32)(nil),
	Field:         20033,
	Name:          "foo.bar.true",
	Tag:           "varint,20033,opt,name=true",
	Filename:      "desc_test_complex.proto",
}

var E_False = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*int32)(nil),
	Field:         20034,
	Name:          "foo.bar.false",
	Tag:           "varint,20034,opt,name=false",
	Filename:      "desc_test_complex.proto",
}

var E_Default = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*int32)(nil),
	Field:         20035,
	Name:          "foo.bar.default",
	Tag:           "varint,20035,opt,name=default",
	Filename:      "desc_test_complex.proto",
}

var E_Boom = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*KeywordCollisions)(nil),
	Field:         20036,
	Name:          "foo.bar.boom",
	Tag:           "bytes,20036,opt,name=boom",
	Filename:      "desc_test_complex.proto",
}

func init() {
	proto.RegisterEnum("foo.bar.EnumWithReservations", EnumWithReservations_name, EnumWithReservations_value)
	proto.RegisterEnum("foo.bar.Test_Nested__NestedNested_EEE", Test_Nested__NestedNested_EEE_name, Test_Nested__NestedNested_EEE_value)
	proto.RegisterEnum("foo.bar.Validator_Action", Validator_Action_name, Validator_Action_value)
	proto.RegisterType((*Simple)(nil), "foo.bar.Simple")
	proto.RegisterType((*Test)(nil), "foo.bar.Test")
	proto.RegisterMapType((map[string]int32)(nil), "foo.bar.Test.MEntry")
	proto.RegisterExtension(E_Test_Nested_Fooblez)
	proto.RegisterType((*Test_Nested)(nil), "foo.bar.Test.Nested")
	proto.RegisterExtension(E_Test_Nested_XNestedNested_XGarblez)
	proto.RegisterType((*Test_Nested__NestedNested)(nil), "foo.bar.Test.Nested._NestedNested")
	proto.RegisterType((*Test_Nested__NestedNested_NestedNestedNested)(nil), "foo.bar.Test.Nested._NestedNested.NestedNestedNested")
	proto.RegisterType((*MessageWithReservations)(nil), "foo.bar.MessageWithReservations")
	proto.RegisterType((*Another)(nil), "foo.bar.Another")
	proto.RegisterType((*Validator)(nil), "foo.bar.Validator")
	proto.RegisterType((*Validator_Permission)(nil), "foo.bar.Validator.Permission")
	proto.RegisterType((*Rule)(nil), "foo.bar.Rule")
	proto.RegisterType((*Rule_StringRule)(nil), "foo.bar.Rule.StringRule")
	proto.RegisterType((*Rule_IntRule)(nil), "foo.bar.Rule.IntRule")
	proto.RegisterType((*Rule_RepeatedRule)(nil), "foo.bar.Rule.RepeatedRule")
	proto.RegisterType((*Rule_FloatRule)(nil), "foo.bar.Rule.FloatRule")
	proto.RegisterType((*IsAuthorizedReq)(nil), "foo.bar.IsAuthorizedReq")
	proto.RegisterType((*KeywordCollisions)(nil), "foo.bar.KeywordCollisions")
	proto.RegisterType((*KeywordCollisionOptions)(nil), "foo.bar.KeywordCollisionOptions")
	proto.RegisterExtension(E_Label)
	proto.RegisterExtension(E_Rept)
	proto.RegisterExtension(E_Eee)
	proto.RegisterExtension(E_A)
	proto.RegisterExtension(E_Validator)
	proto.RegisterExtension(E_Rules)
	proto.RegisterExtension(E_Syntax)
	proto.RegisterExtension(E_Import)
	proto.RegisterExtension(E_Public)
	proto.RegisterExtension(E_Weak)
	proto.RegisterExtension(E_Package)
	proto.RegisterExtension(E_String)
	proto.RegisterExtension(E_Bytes)
	proto.RegisterExtension(E_Int32)
	proto.RegisterExtension(E_Int64)
	proto.RegisterExtension(E_Uint32)
	proto.RegisterExtension(E_Uint64)
	proto.RegisterExtension(E_Sint32)
	proto.RegisterExtension(E_Sint64)
	proto.RegisterExtension(E_Fixed32)
	proto.RegisterExtension(E_Fixed64)
	proto.RegisterExtension(E_Sfixed32)
	proto.RegisterExtension(E_Sfixed64)
	proto.RegisterExtension(E_Bool)
	proto.RegisterExtension(E_Float)
	proto.RegisterExtension(E_Double)
	proto.RegisterExtension(E_Optional)
	proto.RegisterExtension(E_Repeated)
	proto.RegisterExtension(E_Required)
	proto.RegisterExtension(E_Message)
	proto.RegisterExtension(E_Enum)
	proto.RegisterExtension(E_Service)
	proto.RegisterExtension(E_Rpc)
	proto.RegisterExtension(E_Option)
	proto.RegisterExtension(E_Extend)
	proto.RegisterExtension(E_Extensions)
	proto.RegisterExtension(E_Reserved)
	proto.RegisterExtension(E_To)
	proto.RegisterExtension(E_True)
	proto.RegisterExtension(E_False)
	proto.RegisterExtension(E_Default)
	proto.RegisterExtension(E_Boom)
}

func init() { proto.RegisterFile("desc_test_complex.proto", fileDescriptor_2643e20efc4f24c4) }

var fileDescriptor_2643e20efc4f24c4 = []byte{
	// 2641 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x98, 0x5d, 0x6c, 0x1c, 0xd5,
	0xd9, 0xc7, 0xfd, 0xcc, 0xcc, 0xae, 0xe7, 0x1c, 0x3b, 0xc9, 0x30, 0x04, 0x32, 0x59, 0xde, 0x90,
	0xcd, 0x82, 0xa2, 0x8d, 0xdf, 0x76, 0xb3, 0x5e, 0x3b, 0x06, 0x26, 0x40, 0x62, 0x87, 0x05, 0x12,
	0x3e, 0x42, 0x07, 0x1a, 0x28, 0x98, 0x9a, 0xd9, 0xdd, 0xb3, 0xf6, 0xc0, 0xec, 0xcc, 0x32, 0x33,
	0x9b, 0xd8, 0x69, 0x24, 0xac, 0xa2, 0x22, 0x7a, 0xd3, 0xa6, 0x56, 0x2f, 0x50, 0x65, 0x24, 0x30,
	0x6d, 0x81, 0x96, 0xb6, 0x94, 0x7e, 0x01, 0xfd, 0x0a, 0xa5, 0x17, 0x29, 0x12, 0x52, 0xc4, 0x15,
	0xbd, 0x01, 0xb4, 0x1b, 0x55, 0xb9, 0x44, 0xa2, 0x91, 0x40, 0x55, 0x9b, 0xea, 0x7c, 0xcc, 0xac,
	0xed, 0x04, 0x0d, 0xb5, 0x94, 0xcc, 0x3c, 0xe7, 0x79, 0x7e, 0xcf, 0xf9, 0x3e, 0xe7, 0x3f, 0x8b,
	0xb7, 0x34, 0x48, 0x58, 0x9f, 0x89, 0x48, 0x18, 0xcd, 0xd4, 0xfd, 0x56, 0xdb, 0x25, 0xf3, 0xa5,
	0x76, 0xe0, 0x47, 0xbe, 0x3e, 0xd8, 0xf4, 0xfd, 0x52, 0xcd, 0x0e, 0x72, 0xf9, 0x59, 0xdf, 0x9f,
	0x75, 0xc9, 0x6e, 0x56, 0x5c, 0xeb, 0x34, 0x77, 0x53, 0x22, 0x70, 0xda, 0x91, 0x1f, 0xf0, 0xd0,
	0xc2, 0x97, 0x70, 0xf6, 0x5e, 0x87, 0xb2, 0xba, 0x8e, 0x15, 0xcf, 0x6e, 0x11, 0x03, 0xf2, 0x50,
	0x44, 0x16, 0x7b, 0xd7, 0x37, 0x62, 0xc9, 0x69, 0x18, 0x52, 0x1e, 0x8a, 0x8a, 0x25, 0x39, 0x8d,
	0xc2, 0xbb, 0x0a, 0x56, 0xee, 0x23, 0x61, 0xa4, 0xeb, 0x58, 0x6e, 0xfa, 0xbe, 0x88, 0xcd, 0x9c,
	0x68, 0xfa, 0xfe, 0x09, 0x7d, 0x33, 0xce, 0xd8, 0x41, 0x60, 0x2f, 0x18, 0x52, 0x5e, 0x2e, 0x66,
	0x2c, 0x6e, 0xe8, 0xdb, 0x30, 0x84, 0x86, 0x9c, 0x87, 0xe2, 0x50, 0x65, 0x53, 0x49, 0xb4, 0xab,
	0xc4, 0xab, 0xb4, 0x20, 0xa4, 0xee, 0xc0, 0x50, 0xf2, 0xf2, 0x25, 0xdd, 0x81, 0x5e, 0xc0, 0xd0,
	0x32, 0x32, 0xcc, 0xbd, 0x39, 0x71, 0xd3, 0x16, 0x94, 0xee, 0xaa, 0x7a, 0x51, 0xb0, 0x60, 0x41,
	0x4b, 0x1f, 0xc7, 0x50, 0x33, 0xb2, 0x79, 0x28, 0x0e, 0x9b, 0x3b, 0xa7, 0xcb, 0xe5, 0xf2, 0x74,
	0xb9, 0x3c, 0x3a, 0x5d, 0x2e, 0x57, 0xa6, 0xcb, 0xe5, 0xb1, 0xe9, 0x72, 0x79, 0x7c, 0xba, 0x5c,
	0xde, 0x33, 0x5d, 0x2e, 0x4f, 0x4c, 0x97, 0xcb, 0xd7, 0x35, 0x3b, 0x35, 0x3b, 0xd8, 0x61, 0x41,
	0x2d, 0x37, 0x8e, 0xb3, 0x3c, 0x85, 0xae, 0x61, 0xf9, 0x31, 0xb2, 0x20, 0xfa, 0x42, 0x5f, 0x69,
	0x4f, 0x8e, 0xda, 0x6e, 0x87, 0xb0, 0x9e, 0x67, 0x2c, 0x6e, 0x98, 0xd2, 0xf5, 0x90, 0x7b, 0x5e,
	0xc2, 0xd9, 0xbb, 0x49, 0x18, 0x91, 0x46, 0xee, 0xef, 0x80, 0x37, 0xcc, 0xf0, 0x77, 0x51, 0x72,
	0x10, 0xeb, 0xab, 0x6d, 0xfe, 0xbf, 0xbe, 0x83, 0x0f, 0x19, 0xcb, 0x3f, 0x54, 0xd9, 0xb0, 0xa6,
	0x17, 0x16, 0x73, 0x99, 0xda, 0x52, 0x17, 0x0d, 0x63, 0x79, 0xce, 0xf7, 0x57, 0xb2, 0x4a, 0xd8,
	0xf6, 0xfd, 0xc2, 0x4d, 0x58, 0xae, 0x56, 0xab, 0x7a, 0x16, 0x4b, 0x87, 0xef, 0xd0, 0x06, 0xe8,
	0xf3, 0xc8, 0xa8, 0x06, 0xec, 0x59, 0xd1, 0x24, 0xf6, 0x1c, 0xd3, 0x64, 0xf6, 0x1c, 0xd7, 0x14,
	0xf6, 0xdc, 0xa3, 0x65, 0xd8, 0x73, 0x42, 0xcb, 0x56, 0x8a, 0x58, 0x9d, 0x99, 0xb5, 0x83, 0x9a,
	0x4b, 0x8e, 0xeb, 0x6b, 0x6b, 0x34, 0x1a, 0xac, 0x9b, 0x83, 0xb7, 0x71, 0xaf, 0xb9, 0x79, 0xa9,
	0x8b, 0x86, 0xb0, 0x3c, 0x4b, 0xab, 0x96, 0x6b, 0xbe, 0xff, 0x4c, 0x17, 0x9d, 0xbf, 0xbb, 0xb2,
	0x17, 0xd3, 0x25, 0xc4, 0xf0, 0xed, 0x25, 0xbe, 0x86, 0x4a, 0xf1, 0x1a, 0x2a, 0xdd, 0x45, 0xc2,
	0xd0, 0x9e, 0x25, 0x87, 0xdb, 0x91, 0xe3, 0x7b, 0xa1, 0xf1, 0xc2, 0x32, 0xb0, 0x51, 0x8a, 0x89,
	0x91, 0x8c, 0xda, 0xd0, 0xfe, 0x06, 0x23, 0x9a, 0xfa, 0x8a, 0xa4, 0x7d, 0x28, 0xe5, 0xd4, 0x6f,
	0x76, 0x91, 0xf2, 0xa8, 0x7d, 0xfc, 0xf8, 0x88, 0xa6, 0xfe, 0x53, 0xd6, 0x5e, 0x54, 0xfa, 0x25,
	0x85, 0x7d, 0x78, 0x8b, 0xc8, 0x76, 0xbf, 0x13, 0xcd, 0x59, 0x24, 0x24, 0xc1, 0x51, 0x9b, 0xa5,
	0x3d, 0xa4, 0xa8, 0x19, 0x6d, 0xe8, 0x90, 0xa2, 0x0e, 0x6b, 0xda, 0x21, 0x45, 0xd5, 0xb5, 0xcb,
	0x0f, 0x21, 0xf5, 0xdc, 0xa0, 0xb6, 0xb8, 0xb8, 0xb8, 0x28, 0x59, 0x30, 0x69, 0xc1, 0x94, 0x05,
	0x07, 0x0a, 0x2f, 0x4a, 0x78, 0x70, 0xd2, 0xf3, 0xa3, 0x39, 0x12, 0xd0, 0x81, 0x8e, 0x3e, 0x7f,
	0xa0, 0xa9, 0x4b, 0xbf, 0x11, 0xcb, 0xcd, 0x66, 0x93, 0x4d, 0xeb, 0xc6, 0xca, 0xce, 0xb5, 0x0b,
	0x8a, 0x4f, 0x57, 0x69, 0xcd, 0x94, 0x96, 0xaa, 0xd5, 0xaa, 0x29, 0x1d, 0x19, 0xb5, 0x28, 0x66,
	0xbe, 0x09, 0x4b, 0x5d, 0x74, 0x0d, 0x96, 0xed, 0x5a, 0x5d, 0x03, 0x4d, 0xd2, 0xe4, 0xdc, 0x20,
	0xdb, 0x06, 0xda, 0x37, 0x0a, 0x32, 0x86, 0x26, 0xfd, 0x2f, 0x2c, 0xc8, 0xda, 0x69, 0x79, 0xa9,
	0x8b, 0xb6, 0x63, 0xb9, 0x41, 0x9a, 0x9a, 0xac, 0x49, 0x1a, 0xe4, 0x54, 0x2c, 0xd7, 0xec, 0x40,
	0x7b, 0x4b, 0xa2, 0x21, 0xb3, 0x2c, 0x6e, 0xa9, 0x8b, 0x32, 0x2c, 0xe4, 0x4c, 0x17, 0xc1, 0x4a,
	0x0f, 0x49, 0xda, 0xc0, 0x4a, 0x0f, 0x5d, 0x81, 0x2f, 0x1f, 0x11, 0x39, 0x1b, 0x23, 0x82, 0x3a,
	0x4d, 0xdd, 0x83, 0x38, 0x83, 0xe5, 0xd6, 0xce, 0xd6, 0x4a, 0x0f, 0x61, 0xac, 0xe6, 0xb2, 0x58,
	0x59, 0xf0, 0x5d, 0x7f, 0xa5, 0x87, 0x54, 0x9c, 0xcd, 0x29, 0xda, 0xbb, 0x4f, 0x66, 0x57, 0x7a,
	0x48, 0xc1, 0x92, 0x06, 0xe2, 0x29, 0xad, 0xf4, 0xd0, 0x10, 0x46, 0x2b, 0xd9, 0xec, 0xb1, 0x39,
	0xdf, 0x9e, 0xdb, 0x51, 0xf8, 0x04, 0x30, 0x3a, 0x62, 0xbb, 0x4e, 0xc3, 0x8e, 0xfc, 0x40, 0xbf,
	0x16, 0x6f, 0xb0, 0x3b, 0xd1, 0x1c, 0xf1, 0x22, 0xa7, 0x6e, 0x47, 0xa4, 0xc1, 0x06, 0x4d, 0xb5,
	0xd6, 0x16, 0xea, 0x37, 0x61, 0xdc, 0x26, 0x41, 0xcb, 0x09, 0x43, 0xc7, 0xf7, 0xd8, 0xb6, 0x1e,
	0xaa, 0x6c, 0x4b, 0x46, 0x2d, 0xc9, 0x56, 0xba, 0x27, 0x09, 0xb2, 0x56, 0x01, 0xb9, 0xfb, 0x31,
	0xee, 0x7b, 0xf4, 0x51, 0x9c, 0xb5, 0xeb, 0x74, 0x6e, 0x59, 0x5d, 0x1b, 0x2b, 0x5b, 0x2f, 0x91,
	0x68, 0x92, 0x05, 0x58, 0x22, 0x50, 0xbf, 0x12, 0x67, 0x69, 0x63, 0xa2, 0x05, 0x36, 0x63, 0xc8,
	0x12, 0x56, 0xa1, 0x88, 0xb3, 0x3c, 0x52, 0x47, 0x38, 0x73, 0xe7, 0xe1, 0xdb, 0x0e, 0xde, 0xad,
	0x0d, 0xe8, 0x2a, 0x56, 0xac, 0xea, 0xe4, 0x2d, 0x1a, 0xd0, 0xc2, 0xfb, 0xad, 0x83, 0xf7, 0x55,
	0x35, 0xa9, 0x70, 0x4e, 0xc1, 0x8a, 0xd5, 0x71, 0x89, 0x5e, 0xc1, 0xd9, 0x30, 0x0a, 0x1c, 0x6f,
	0x56, 0x2c, 0x0f, 0x23, 0xa9, 0x9d, 0xba, 0x4b, 0xf7, 0x32, 0x1f, 0x7d, 0xbd, 0x7d, 0xc0, 0x12,
	0x91, 0xfa, 0xf5, 0x58, 0x0d, 0x48, 0x9b, 0xb0, 0xf1, 0x91, 0x18, 0x95, 0x5b, 0x4b, 0x59, 0xc2,
	0x2b, 0xb8, 0x24, 0x5a, 0xdf, 0x85, 0x65, 0xc7, 0x8b, 0xc4, 0xb1, 0x77, 0xc5, 0x5a, 0xe8, 0xa0,
	0x17, 0x89, 0x78, 0x1a, 0xa3, 0x5f, 0x87, 0x51, 0xd3, 0xf5, 0xed, 0x28, 0xe8, 0xb8, 0xc4, 0x50,
	0xf2, 0x50, 0xc4, 0x95, 0x2d, 0x6b, 0x81, 0x5b, 0xa9, 0x5b, 0x20, 0xfd, 0xd8, 0xdc, 0x02, 0xc6,
	0xfd, 0x56, 0xeb, 0x06, 0x1e, 0x6c, 0xdb, 0x51, 0x44, 0x02, 0x4f, 0x1c, 0x64, 0xb1, 0xa9, 0x6f,
	0xc7, 0x43, 0xb6, 0xeb, 0xfa, 0xc7, 0x66, 0x48, 0xab, 0x2d, 0x46, 0x52, 0xb5, 0x30, 0x2b, 0xaa,
	0xd2, 0x12, 0x7d, 0x0b, 0x1e, 0x6c, 0x39, 0xde, 0x8c, 0x4b, 0x3c, 0xd6, 0xe0, 0x8c, 0x95, 0x6d,
	0x39, 0xde, 0x9d, 0xc4, 0x63, 0x0e, 0x7b, 0x9e, 0x39, 0x14, 0xe1, 0xb0, 0xe7, 0xef, 0x24, 0x5e,
	0x6e, 0x2f, 0x1e, 0x14, 0xbd, 0x88, 0xe1, 0xa3, 0xb6, 0xcb, 0xea, 0x95, 0x19, 0x7c, 0xc4, 0x76,
	0x63, 0x98, 0x3a, 0xf8, 0xfd, 0x41, 0xe1, 0x23, 0xb6, 0x9b, 0xfb, 0x0e, 0xe0, 0xe1, 0xd5, 0x03,
	0xb7, 0xbe, 0x81, 0x70, 0x51, 0x03, 0xaf, 0xc2, 0x88, 0xd6, 0xe1, 0x44, 0xa4, 0x15, 0x8a, 0x23,
	0x59, 0x6d, 0x39, 0xde, 0x41, 0x6a, 0x33, 0xa7, 0x3d, 0x2f, 0x9c, 0xb2, 0x70, 0xda, 0xf3, 0xdc,
	0x79, 0x0d, 0xce, 0x70, 0x87, 0xb2, 0xee, 0x4c, 0xa0, 0x15, 0x5b, 0xdc, 0x97, 0xbb, 0x09, 0xa3,
	0x64, 0x88, 0xd7, 0xf7, 0x07, 0x3e, 0xaf, 0x3f, 0x10, 0xf7, 0x67, 0x2a, 0x8b, 0x15, 0x3a, 0x1f,
	0x85, 0x16, 0xde, 0x74, 0x30, 0x9c, 0xec, 0x44, 0x73, 0x7e, 0xe0, 0x1c, 0x27, 0x0d, 0x8b, 0x3c,
	0xae, 0x3f, 0x88, 0xd5, 0xb0, 0x53, 0x7b, 0x94, 0xd4, 0xa3, 0xd0, 0x80, 0xbc, 0x5c, 0x44, 0x53,
	0x37, 0x2f, 0xdd, 0xb5, 0x57, 0xbf, 0x41, 0x83, 0xc2, 0x1e, 0x3c, 0x86, 0x47, 0xbf, 0x5e, 0xdc,
	0x67, 0x16, 0xf7, 0x99, 0x11, 0xb1, 0x5b, 0xf4, 0xe9, 0xfa, 0x75, 0xdb, 0x3d, 0xe1, 0x36, 0xec,
	0xf6, 0xae, 0x5d, 0x27, 0x3a, 0x21, 0x09, 0x76, 0x99, 0x0f, 0x3d, 0x64, 0xda, 0xae, 0xd7, 0x69,
	0x99, 0x0f, 0xcf, 0x7c, 0xf9, 0xe1, 0xff, 0xbf, 0xd6, 0x4a, 0xf2, 0x15, 0x3e, 0xcc, 0xe2, 0xcb,
	0xee, 0x20, 0x0b, 0xc7, 0xfc, 0xa0, 0x71, 0xc0, 0x77, 0x5d, 0x87, 0xee, 0xb1, 0x90, 0xee, 0x98,
	0x70, 0xc1, 0x8b, 0xec, 0x79, 0x31, 0x8c, 0xc2, 0xa2, 0xe5, 0x4e, 0xab, 0xed, 0x07, 0x91, 0x98,
	0x7f, 0x61, 0xd1, 0xf2, 0x76, 0xa7, 0xe6, 0x3a, 0x75, 0x36, 0x74, 0xaa, 0x25, 0x2c, 0x2a, 0x06,
	0x8e, 0x11, 0xfb, 0x31, 0x36, 0x6e, 0xaa, 0xc5, 0xde, 0xf9, 0x12, 0xab, 0x3f, 0x66, 0xcf, 0x12,
	0x23, 0xc3, 0x8a, 0x63, 0x93, 0xd5, 0xca, 0x37, 0x57, 0x96, 0xef, 0x53, 0xb1, 0x81, 0x36, 0xe3,
	0x4c, 0x6d, 0x21, 0x22, 0xa1, 0x31, 0x48, 0x6f, 0x67, 0x8b, 0x1b, 0xb4, 0xd4, 0xf1, 0xa2, 0xb1,
	0x8a, 0xa1, 0xf2, 0xdb, 0x95, 0x19, 0xa2, 0x74, 0x62, 0xdc, 0x40, 0x6c, 0x19, 0x71, 0x83, 0x66,
	0xee, 0xf0, 0x60, 0x9c, 0x87, 0xe2, 0x06, 0x4b, 0x58, 0x71, 0xf9, 0xc4, 0xb8, 0x31, 0xc4, 0x17,
	0x57, 0x27, 0x89, 0x0f, 0x79, 0xfc, 0x70, 0x1e, 0x8a, 0x97, 0x59, 0xc2, 0x8a, 0xcb, 0x27, 0xc6,
	0x8d, 0x0d, 0x79, 0x28, 0xea, 0x96, 0xb0, 0x68, 0x9f, 0x9a, 0xce, 0x3c, 0x69, 0x8c, 0x55, 0x8c,
	0x8d, 0x79, 0x28, 0x0e, 0x5a, 0xb1, 0x99, 0x78, 0x26, 0xc6, 0x8d, 0x4d, 0x79, 0x28, 0x66, 0xad,
	0xd8, 0xd4, 0x73, 0x58, 0x0d, 0x63, 0x48, 0xcb, 0x43, 0x71, 0x93, 0x95, 0xd8, 0x7d, 0xdf, 0xc4,
	0xb8, 0x71, 0x59, 0x1e, 0x8a, 0x9a, 0x95, 0xd8, 0x74, 0x4c, 0x6b, 0xbe, 0xef, 0x1a, 0x3a, 0x1f,
	0x53, 0xfa, 0x4e, 0x7b, 0xcd, 0x76, 0xb4, 0x71, 0x79, 0x1e, 0x8a, 0x92, 0xc5, 0x0d, 0xda, 0xda,
	0x86, 0xdf, 0xa9, 0xb9, 0xc4, 0xd8, 0xcc, 0x97, 0x1a, 0xb7, 0x68, 0x76, 0x9f, 0xdd, 0xba, 0xb6,
	0x6b, 0x5c, 0xc1, 0xb2, 0x24, 0x36, 0xf5, 0x25, 0x87, 0xd5, 0x95, 0xdc, 0x97, 0x1c, 0x47, 0xcc,
	0xf7, 0x78, 0xc7, 0x09, 0x48, 0xc3, 0xd8, 0x12, 0xfb, 0xb8, 0x4d, 0xfb, 0xd9, 0xe2, 0x57, 0xb0,
	0x61, 0xf0, 0x59, 0x15, 0x26, 0x6d, 0x2f, 0xf1, 0x3a, 0x2d, 0x63, 0x2b, 0x6f, 0x2f, 0x7d, 0xa7,
	0xd1, 0xf4, 0x8e, 0x76, 0xea, 0xc4, 0xc8, 0xf1, 0x68, 0x61, 0x52, 0x15, 0x15, 0xb4, 0xeb, 0xc6,
	0x55, 0xac, 0x94, 0xbe, 0xd2, 0x5e, 0xf0, 0xd6, 0x19, 0xff, 0xc7, 0xd7, 0x16, 0xb7, 0xd8, 0xa9,
	0x3e, 0x1f, 0x11, 0xaf, 0x61, 0x6c, 0xe3, 0xe5, 0xdc, 0xd2, 0xaf, 0xc6, 0x98, 0xbd, 0xb1, 0x95,
	0x6c, 0x5c, 0xcd, 0x8f, 0x81, 0x7e, 0x09, 0xef, 0x05, 0xad, 0x8e, 0x34, 0x8c, 0xed, 0x71, 0x2f,
	0xb8, 0x4d, 0x85, 0x6a, 0xe4, 0x1b, 0x79, 0x56, 0x2a, 0x45, 0x3e, 0x6d, 0x7b, 0x14, 0x74, 0x88,
	0xb1, 0x83, 0x2d, 0x31, 0xf6, 0xce, 0xc6, 0xda, 0x76, 0x43, 0x62, 0x14, 0xf8, 0xba, 0x63, 0x06,
	0xed, 0x51, 0x83, 0x34, 0xed, 0x8e, 0x1b, 0x19, 0xd7, 0x70, 0x1d, 0x23, 0xcc, 0xc2, 0x0f, 0x64,
	0xbc, 0x65, 0xfd, 0x0e, 0x13, 0xa2, 0x47, 0x7f, 0x0f, 0x98, 0x32, 0xa6, 0x9b, 0x4c, 0x99, 0x7a,
	0x0b, 0x9e, 0xee, 0x22, 0x38, 0xd9, 0x45, 0xf0, 0x4c, 0x17, 0xc1, 0x73, 0x5d, 0x04, 0x2f, 0x75,
	0x11, 0xbc, 0xd6, 0x45, 0x62, 0x1f, 0xbc, 0xd9, 0x45, 0x7c, 0xe9, 0x9f, 0xea, 0xa2, 0xfc, 0xe9,
	0x2e, 0xda, 0x7f, 0xa6, 0x8b, 0x16, 0xb7, 0xbe, 0xdf, 0x45, 0x8b, 0x95, 0x8f, 0xba, 0x68, 0xdf,
	0xb9, 0x2e, 0x7a, 0xe2, 0x7c, 0x17, 0x3d, 0x37, 0x3c, 0x30, 0xf0, 0x59, 0x17, 0xed, 0xdf, 0x3a,
	0xc0, 0xfe, 0xbe, 0xd5, 0x43, 0x8f, 0x7c, 0x72, 0xe1, 0xc2, 0xb7, 0x7b, 0xe8, 0xd4, 0x3f, 0x2e,
	0xb0, 0xbf, 0x93, 0x3d, 0x04, 0xcf, 0xf6, 0xd0, 0xdb, 0xe7, 0x6f, 0xdf, 0xff, 0x7c, 0x0f, 0x79,
	0x4f, 0x5d, 0xf5, 0xf1, 0x67, 0x3b, 0xd0, 0xfe, 0x97, 0x7a, 0x08, 0x5e, 0xed, 0x21, 0x78, 0xbd,
	0x87, 0xe0, 0x54, 0x0f, 0xc1, 0xe9, 0x1e, 0x82, 0x33, 0x3d, 0x04, 0xef, 0xf7, 0x10, 0x7c, 0xd4,
	0x43, 0x70, 0xae, 0x87, 0xe0, 0xe3, 0x1e, 0x82, 0x4f, 0x7b, 0x08, 0x16, 0xcf, 0x22, 0x78, 0xfa,
	0x2c, 0xf2, 0x4f, 0x9e, 0x45, 0xdf, 0xbb, 0x20, 0xfe, 0xe0, 0x99, 0xb3, 0xe8, 0x03, 0xa0, 0xea,
	0x5e, 0x7f, 0x19, 0xc4, 0x27, 0x00, 0xbb, 0x6d, 0xa7, 0xbe, 0x0f, 0x2b, 0x67, 0xd1, 0x77, 0x41,
	0x05, 0x0d, 0xf8, 0x59, 0x58, 0x11, 0xfd, 0x31, 0x79, 0x6f, 0xf6, 0xe7, 0x6f, 0xdf, 0x7f, 0xcf,
	0xe2, 0xd6, 0x07, 0x16, 0x2b, 0x8f, 0xec, 0x9b, 0x7b, 0xa2, 0x43, 0xdb, 0xbf, 0x90, 0xb4, 0x1e,
	0x58, 0xe3, 0x21, 0x69, 0x3b, 0xc0, 0xb3, 0xc0, 0x5a, 0x0e, 0x49, 0xc3, 0x01, 0x5e, 0x05, 0x78,
	0x1d, 0xe0, 0x14, 0xc0, 0x69, 0x80, 0x33, 0x00, 0xef, 0x03, 0x7c, 0x04, 0x70, 0x0e, 0xe0, 0x63,
	0x80, 0x4f, 0x01, 0x16, 0x25, 0x78, 0x5a, 0xf2, 0x4f, 0x4a, 0xab, 0x9a, 0x2a, 0x7d, 0x00, 0xfc,
	0xcb, 0x64, 0x64, 0x1e, 0x6f, 0xae, 0x7a, 0x9d, 0xd6, 0x7a, 0xd9, 0xa8, 0x67, 0x30, 0x3c, 0xa0,
	0x49, 0xf4, 0xf1, 0x35, 0x4d, 0xa6, 0x8f, 0x07, 0x35, 0xa5, 0xc0, 0x94, 0x23, 0xcd, 0x30, 0x58,
	0xd8, 0xa0, 0xfe, 0x27, 0x49, 0xa7, 0x41, 0x81, 0xaa, 0x4c, 0x5c, 0xa0, 0x2a, 0x73, 0x53, 0x81,
	0xaa, 0x4c, 0xbd, 0x70, 0xa5, 0xfa, 0xaf, 0x7e, 0xc0, 0xbf, 0x93, 0xd7, 0x11, 0x38, 0x30, 0x02,
	0x53, 0x23, 0x30, 0x59, 0x79, 0x0a, 0xf0, 0x26, 0x2a, 0x18, 0xe9, 0xbf, 0x7b, 0xc5, 0xe2, 0xbf,
	0x11, 0xab, 0x5f, 0x0d, 0x49, 0x40, 0x4f, 0xff, 0x75, 0x7a, 0x3b, 0xb7, 0xd6, 0x2c, 0xe8, 0xef,
	0x3c, 0x99, 0xdd, 0xa8, 0x82, 0x8e, 0xd5, 0x01, 0x3d, 0x5b, 0x77, 0x1d, 0xe2, 0x45, 0xfa, 0x1e,
	0x2c, 0xdf, 0x46, 0xa2, 0x14, 0x50, 0x7b, 0xe7, 0xc9, 0xec, 0xb0, 0x0a, 0xba, 0xaa, 0x82, 0xae,
	0xd0, 0xcb, 0xc1, 0xbc, 0x19, 0x67, 0x5c, 0xbb, 0x46, 0x5c, 0x7d, 0xe7, 0x45, 0x12, 0xbd, 0x1a,
	0xef, 0x1a, 0xcb, 0xf6, 0xfa, 0x4a, 0xfd, 0xb9, 0x65, 0xf1, 0xbd, 0xc6, 0x30, 0xf3, 0x16, 0xac,
	0x04, 0xa4, 0x1d, 0xa5, 0x2b, 0xfc, 0x95, 0x65, 0x60, 0xd2, 0x6f, 0xbd, 0xa4, 0xa6, 0xb4, 0xf9,
	0x10, 0x96, 0x09, 0x21, 0xe9, 0x49, 0x7e, 0xb2, 0x0c, 0xff, 0x8b, 0xea, 0xb6, 0x68, 0x56, 0x73,
	0x12, 0x83, 0x9d, 0x9e, 0xfa, 0xd7, 0xcb, 0x5c, 0xd3, 0x69, 0x49, 0x6a, 0xf1, 0x49, 0x60, 0x81,
	0x6d, 0x7e, 0x05, 0xa3, 0xa3, 0x89, 0xec, 0xbd, 0xfa, 0x12, 0xa9, 0xa2, 0x39, 0xbf, 0x11, 0x67,
	0x7a, 0xe3, 0x11, 0x96, 0x48, 0xbf, 0x58, 0x9a, 0x5a, 0xfd, 0x2c, 0xe6, 0x01, 0x9c, 0xa1, 0x37,
	0x7e, 0xa8, 0x6f, 0xbb, 0x28, 0xdd, 0xad, 0x0e, 0x71, 0x93, 0x6c, 0xef, 0xa1, 0x4b, 0xaa, 0x0e,
	0xc6, 0x9a, 0xd7, 0xc5, 0x37, 0x75, 0x5a, 0x96, 0xe7, 0x97, 0xd7, 0x5c, 0xe5, 0x14, 0x14, 0x97,
	0x77, 0x0a, 0xb8, 0x12, 0x83, 0x3c, 0x9c, 0x82, 0xe2, 0x76, 0x4f, 0x01, 0x5f, 0x88, 0x41, 0x1e,
	0x6e, 0x8e, 0x71, 0x31, 0x90, 0x86, 0xfd, 0x50, 0x60, 0x2c, 0xd8, 0xbc, 0x21, 0x51, 0x0b, 0x69,
	0xdc, 0x8f, 0x04, 0x17, 0xc7, 0xb3, 0xa1, 0xe1, 0x02, 0x22, 0x85, 0xfc, 0xb1, 0x58, 0xd0, 0xf1,
	0xb9, 0xb4, 0x47, 0xe8, 0x8d, 0x34, 0xee, 0x45, 0xc6, 0xc5, 0x82, 0x84, 0x62, 0x5c, 0x25, 0xa4,
	0x60, 0x2f, 0x89, 0x2f, 0x5d, 0x1e, 0x2d, 0xb0, 0x89, 0xf1, 0x34, 0xec, 0xe5, 0x65, 0x58, 0x25,
	0x69, 0x68, 0xef, 0x3a, 0x5f, 0xa8, 0x3a, 0xbe, 0x63, 0x12, 0xcd, 0x13, 0x83, 0xe9, 0x15, 0xfe,
	0x94, 0x81, 0x89, 0x28, 0x62, 0xe3, 0xf9, 0x85, 0x6a, 0x7c, 0x85, 0x81, 0x89, 0x6a, 0x8a, 0xc1,
	0xf4, 0x1a, 0x7f, 0xc6, 0xc0, 0x44, 0x56, 0xd1, 0xc9, 0x8f, 0x15, 0x51, 0x0a, 0xf9, 0x73, 0x46,
	0xf6, 0x75, 0x57, 0x82, 0xa6, 0x57, 0xfa, 0x0b, 0x86, 0xf6, 0x85, 0x99, 0xb9, 0xb7, 0x2f, 0xcc,
	0xd2, 0xd8, 0x57, 0x19, 0xbb, 0x4a, 0xb9, 0xf5, 0xe1, 0xf4, 0x8a, 0x7f, 0xc9, 0xe0, 0x55, 0xd2,
	0x8e, 0xee, 0x10, 0x26, 0xe7, 0x52, 0xc0, 0xd7, 0xe2, 0x1d, 0x42, 0x83, 0xe9, 0xfa, 0xe1, 0x72,
	0x2f, 0x85, 0xfa, 0x15, 0xa3, 0x62, 0x71, 0x48, 0x27, 0x45, 0xc8, 0xc1, 0x14, 0x8e, 0x1f, 0x8b,
	0x89, 0x7a, 0xa4, 0x3d, 0x4c, 0xd4, 0x62, 0x0a, 0xfa, 0x1b, 0xd1, 0xd0, 0x04, 0xa0, 0x70, 0x22,
	0x27, 0x53, 0xe0, 0xdf, 0xc6, 0x70, 0x0c, 0x70, 0x58, 0xe8, 0xcd, 0x14, 0xf8, 0x77, 0x7d, 0x98,
	0x03, 0x74, 0x41, 0xc4, 0x8a, 0x34, 0x85, 0x7d, 0x3d, 0x3e, 0x48, 0x44, 0x3c, 0x9d, 0x16, 0xa6,
	0x5a, 0x53, 0xb8, 0x37, 0xe2, 0x69, 0xa1, 0xc1, 0xb4, 0xbe, 0x58, 0xd3, 0xa6, 0x70, 0x6f, 0xc6,
	0xf5, 0x89, 0x78, 0x73, 0x94, 0x69, 0xe0, 0x34, 0xec, 0xf7, 0x02, 0xa3, 0xb1, 0x74, 0x36, 0x85,
	0x2c, 0x4e, 0xa1, 0xfe, 0x10, 0x1f, 0xca, 0x3c, 0x9c, 0x82, 0x42, 0x37, 0xa7, 0x80, 0x7f, 0x8c,
	0x41, 0x1e, 0x6e, 0xee, 0x5b, 0x2d, 0xb3, 0xd3, 0xe0, 0x3f, 0x09, 0x78, 0x15, 0xc2, 0x67, 0x53,
	0xe8, 0xee, 0x14, 0xfc, 0xcf, 0xfd, 0xd9, 0xe4, 0x80, 0xb9, 0x9b, 0x0a, 0xf5, 0x34, 0xec, 0x94,
	0xc0, 0xa4, 0xc8, 0xa7, 0x73, 0xc8, 0xd4, 0x7b, 0x0a, 0xf2, 0x96, 0x38, 0x9b, 0x59, 0x30, 0xdb,
	0x5a, 0x4c, 0xdd, 0xa7, 0x50, 0x7f, 0x89, 0x4f, 0x74, 0x16, 0x4d, 0xa7, 0x5e, 0x88, 0xff, 0x34,
	0xf0, 0xed, 0xf8, 0x47, 0x4f, 0x11, 0x6f, 0x1e, 0x66, 0x27, 0x40, 0xea, 0x52, 0xfb, 0xab, 0x90,
	0x2a, 0xfd, 0x1f, 0x92, 0x2e, 0xfa, 0x86, 0x67, 0xa7, 0x43, 0x6b, 0x6a, 0xec, 0xc1, 0xd1, 0x59,
	0x27, 0x9a, 0xeb, 0xd4, 0x4a, 0x75, 0xbf, 0xb5, 0xfb, 0xd1, 0xb9, 0x4e, 0xab, 0xcd, 0x7f, 0xc6,
	0x0f, 0x48, 0xd3, 0x25, 0xf5, 0x68, 0xb7, 0xe3, 0x45, 0x24, 0xf0, 0x6c, 0x77, 0x77, 0x44, 0xc2,
	0x88, 0x79, 0xc2, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x6f, 0x32, 0x42, 0x45, 0x12, 0x18, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestTestServiceClient is the client API for TestTestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestTestServiceClient interface {
	UserAuth(ctx context.Context, in *Test, opts ...grpc.CallOption) (*Test, error)
	Get(ctx context.Context, in *Test, opts ...grpc.CallOption) (*Test, error)
}

type testTestServiceClient struct {
	cc *grpc.ClientConn
}

func NewTestTestServiceClient(cc *grpc.ClientConn) TestTestServiceClient {
	return &testTestServiceClient{cc}
}

func (c *testTestServiceClient) UserAuth(ctx context.Context, in *Test, opts ...grpc.CallOption) (*Test, error) {
	out := new(Test)
	err := c.cc.Invoke(ctx, "/foo.bar.TestTestService/UserAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testTestServiceClient) Get(ctx context.Context, in *Test, opts ...grpc.CallOption) (*Test, error) {
	out := new(Test)
	err := c.cc.Invoke(ctx, "/foo.bar.TestTestService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestTestServiceServer is the server API for TestTestService service.
type TestTestServiceServer interface {
	UserAuth(context.Context, *Test) (*Test, error)
	Get(context.Context, *Test) (*Test, error)
}

func RegisterTestTestServiceServer(s *grpc.Server, srv TestTestServiceServer) {
	s.RegisterService(&_TestTestService_serviceDesc, srv)
}

func _TestTestService_UserAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Test)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestTestServiceServer).UserAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/foo.bar.TestTestService/UserAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestTestServiceServer).UserAuth(ctx, req.(*Test))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestTestService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Test)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestTestServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/foo.bar.TestTestService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestTestServiceServer).Get(ctx, req.(*Test))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestTestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "foo.bar.TestTestService",
	HandlerType: (*TestTestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserAuth",
			Handler:    _TestTestService_UserAuth_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _TestTestService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "desc_test_complex.proto",
}
